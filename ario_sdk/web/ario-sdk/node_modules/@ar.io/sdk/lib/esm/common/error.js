/**
 * Copyright (C) 2022-2024 Permanent Data Solutions, Inc. All Rights Reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
export class BaseError extends Error {
    constructor(message) {
        super(message);
        this.name = this.constructor.name;
    }
}
export class NotFound extends BaseError {
}
export class BadRequest extends BaseError {
}
export class FailedRequestError extends BaseError {
    constructor(status, message) {
        super(`Failed request: ${status}: ${message}`);
    }
}
export class UnknownError extends BaseError {
}
export class WriteInteractionError extends BaseError {
}
export class InvalidSignerError extends BaseError {
    constructor() {
        super('Invalid signer. Please provide a valid signer to interact with the contract.');
    }
}
export class InvalidContractConfigurationError extends BaseError {
    constructor() {
        super('Invalid contract configuration');
    }
}
export class InvalidProcessConfigurationError extends BaseError {
    constructor() {
        super('Invalid process configuration');
    }
}
export class AbortError extends BaseError {
}
