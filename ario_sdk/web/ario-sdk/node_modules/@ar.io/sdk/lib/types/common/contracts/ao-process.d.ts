/// <reference types="node" />
import { AOContract, AoClient, ContractSigner } from '../../types.js';
import { ILogger } from '../logger.js';
export declare class AOProcess implements AOContract {
    private logger;
    private processId;
    private ao;
    constructor({ processId, ao, logger, }: {
        processId: string;
        ao?: AoClient;
        logger?: ILogger;
    });
    static createAoSigner(signer: ContractSigner): Promise<(args: {
        data: string | Buffer;
        tags?: {
            name: string;
            value: string;
        }[];
        target?: string;
        anchor?: string;
    }) => Promise<{
        id: string;
        raw: ArrayBuffer;
    }>>;
    read<K>({ tags, retries, }: {
        tags?: Array<{
            name: string;
            value: string;
        }>;
        retries?: number;
    }): Promise<K>;
    send<I, K>({ tags, data, signer, retries, }: {
        tags: Array<{
            name: string;
            value: string;
        }>;
        data?: I;
        signer: ContractSigner;
        retries?: number;
    }): Promise<{
        id: string;
        result?: K;
    }>;
}
