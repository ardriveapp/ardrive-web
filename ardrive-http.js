"use strict";var retryStatusCodes=[408,429,440,460,499,500,502,503,504,520,521,522,523,524,525,527,598,599],isStatusCodeError=e=>e>=400&&e<=599,retryDelay=(e,r)=>r*Math.pow(1.5,e),logMessage=(e,r,s,t)=>`uri: ${e}
  response: Http status error [${r}]: ${s}
  retryAttempts: ${t}`,logger={retry:(e,r,s,t)=>{const a=logMessage(e,r,s,t);console.warn(`Network Request Retry
${a}`)},error:(e,r,s,t)=>{const a=logMessage(e,r,s,t);console.error(`Network Request Error
${a}`)}},requestType={json:{contentType:"application/json; charset=utf-8",getResponse:async e=>await e.json()},bytes:{contentType:"application/octet-stream",getResponse:async e=>await e.arrayBuffer()},text:{contentType:"plain/text; charset=utf-8",getResponse:async e=>await e.text()}},get=async([e,r,s,t,a,y=!1,i=0])=>{try{const n=new AbortController,u=setTimeout(()=>n.abort(),8e3),o=await fetch(e,{method:"GET",headers:{...JSON.parse(r)},redirect:"follow",signal:n.signal});clearTimeout(u);const c=o.status,p=o.statusText;if(t>0&&retryStatusCodes.includes(c))return y||logger.retry(e,c,p,i),await get([e,r,s,t-1,a,y,i+1]);if(isStatusCodeError(c)){const l=logMessage(e,c,p,i),b=await requestType.text.getResponse(o);return{error:`Network Request Error
${l}`,retryAttempts:i,statusCode:c,statusMessage:p,data:b}}const g=await requestType[`${s}`].getResponse(o);return{statusCode:c,statusMessage:p,data:g,retryAttempts:i}}catch(n){return console.error(n),console.error(n.stack),{error:`${n}`,retryAttempts:i}}},post=async([e,r,s,t,a,y,i,n=!1,u=0])=>{try{const o=new AbortController,c=setTimeout(()=>o.abort(),8e3),p=await fetch(e,{method:"POST",headers:{...t!==requestType.text.contentType?{"Content-Type":t}:{},...JSON.parse(r)},redirect:"follow",body:s,signal:o.signal});clearTimeout(c);const g=p.status,l=p.statusText;if(y>0&&retryStatusCodes.includes(g))return n||logger.retry(e,g,l,u),await post([e,r,s,t,a,y-1,i,n,u+1]);if(isStatusCodeError(g))return{error:`Network Request Error
${logMessage(e,g,l,u)}`,retryAttempts:u,statusCode:g,statusMessage:l};const b=await requestType[a].getResponse(p);return{statusCode:g,statusMessage:l,data:b,retryAttempts:u}}catch(o){return{error:`${o}`,retryAttempts:u}}};self.get=get,self.post=post;
