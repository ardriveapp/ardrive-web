import '../tables/drives.drift';
import '../tables/drive_revisions.drift';
import '../tables/folder_entries.drift';
import '../tables/folder_revisions.drift';
import '../tables/file_entries.drift';
import '../tables/file_revisions.drift';
import '../tables/network_transactions.drift';
import '../tables/licenses.drift';

allDrives:
    SELECT * FROM drives;
driveById: SELECT * FROM drives WHERE id = :driveId;

oldestDriveRevisionByDriveId:
    SELECT * FROM drive_revisions
    WHERE driveId = :driveId
    ORDER BY dateCreated ASC
    LIMIT 1;
latestDriveRevisionByDriveId:
    SELECT * FROM drive_revisions
    WHERE driveId = :driveId
    ORDER BY dateCreated DESC
    LIMIT 1;
latestDriveRevisionsByDriveIdWithTransactions AS DriveRevisionWithTransaction:
    SELECT rev.*, metadataTx.** FROM drive_revisions rev
    INNER JOIN network_transactions metadataTx ON metadataTx.id = rev.metadataTxId
    WHERE driveId = :driveId
    ORDER BY rev.dateCreated DESC;

folderById:
    SELECT * FROM folder_entries
    WHERE id = :folderId;

foldersInFolder:
    SELECT * FROM folder_entries
    WHERE driveId = :driveId AND parentFolderId = :parentFolderId;

ghostFolders:
    SELECT * FROM folder_entries
    WHERE isGhost = TRUE;

hasHiddenItems:
    SELECT EXISTS(
        SELECT 1 FROM drives
        WHERE isHidden = TRUE
        UNION ALL
        SELECT 1 FROM folder_entries
        WHERE isHidden = TRUE
        UNION ALL
        SELECT 1 FROM file_entries
        WHERE isHidden = TRUE
    ) AS hasHidden;


foldersInFolderWithName:
    SELECT * FROM folder_entries
    WHERE driveId = :driveId AND parentFolderId = :parentFolderId AND name = :name;

oldestFolderRevisionByFolderId:
    SELECT * FROM folder_revisions
    WHERE driveId = :driveId AND folderId = :folderId
    ORDER BY dateCreated ASC
    LIMIT 1;
latestFolderRevisionByFolderId:
    SELECT * FROM folder_revisions
    WHERE driveId = :driveId AND folderId = :folderId
    ORDER BY dateCreated DESC
    LIMIT 1;
latestFolderRevisionsByFolderIdWithTransactions AS FolderRevisionWithTransaction:
    SELECT rev.*, metadataTx.** FROM folder_revisions rev
    INNER JOIN network_transactions metadataTx ON metadataTx.id = rev.metadataTxId
    WHERE driveId = :driveId AND folderId = :folderId
    ORDER BY rev.dateCreated DESC;

fileById:
    SELECT * FROM file_entries
    WHERE id = :fileId;

fileRevisionByDataTx:
    SELECT * FROM file_revisions
    WHERE dataTxId = :tx;
licenseByTxId:
    SELECT * FROM licenses
    WHERE licenseTxId = :tx;

filesInFolder:
    SELECT * FROM file_entries
    WHERE driveId = :driveId AND parentFolderId = :parentFolderId;
filesInFolderWithName:
    SELECT * FROM file_entries
    WHERE driveId = :driveId AND parentFolderId = :parentFolderId AND name = :name;
manifestInFolder:
    SELECT * FROM file_entries
    WHERE parentFolderId = :parentFolderId AND dataContentType = 'application/x.arweave-manifest+json';

filesInFolderWithLicenseAndRevisionTransactions AS FileWithLicenseAndLatestRevisionTransactions:
    SELECT file_entries.*, license.**, metadataTx.**, dataTx.** FROM file_entries
    LEFT JOIN licenses AS license ON license.licenseTxId = (
        SELECT licenseTxId FROM file_revisions AS rev
        WHERE rev.driveId = :driveId AND rev.fileId = file_entries.id
        ORDER BY rev.dateCreated DESC
        LIMIT 1)
    JOIN network_transactions AS metadataTx ON metadataTx.id = (
        SELECT metadataTxId FROM file_revisions AS rev
        WHERE driveId = :driveId AND fileId = file_entries.id
        ORDER BY rev.dateCreated DESC
        LIMIT 1)
    JOIN network_transactions AS dataTx ON dataTx.id = (
        SELECT dataTxId FROM file_revisions AS rev
        WHERE driveId = :driveId AND fileId = file_entries.id
        ORDER BY rev.dateCreated DESC
        LIMIT 1)
    WHERE file_entries.driveId = :driveId AND file_entries.parentFolderId = :parentFolderId;
filesInDriveWithRevisionTransactions AS FileWithLatestRevisionTransactions:
SELECT file_entries.*, metadataTx.**, dataTx.** FROM file_entries
JOIN network_transactions AS metadataTx ON metadataTx.id = (
    SELECT metadataTxId FROM file_revisions AS rev
    WHERE driveId = :driveId AND fileId = file_entries.id
    ORDER BY rev.dateCreated DESC
    LIMIT 1)
JOIN network_transactions AS dataTx ON dataTx.id = (
    SELECT dataTxId FROM file_revisions AS rev
    WHERE driveId = :driveId AND fileId = file_entries.id
    ORDER BY rev.dateCreated DESC
    LIMIT 1)
WHERE driveId = :driveId;

oldestFileRevisionsByFileId:
    SELECT * FROM file_revisions
    WHERE driveId = :driveId AND fileId = :fileId
    ORDER BY dateCreated ASC;
oldestFileRevisionByFileId:
    SELECT * FROM file_revisions
    WHERE driveId = :driveId AND fileId = :fileId
    ORDER BY dateCreated ASC
    LIMIT 1;
latestFileRevisionByFileId:
    SELECT * FROM file_revisions
    WHERE driveId = :driveId AND fileId = :fileId
    ORDER BY dateCreated DESC
    LIMIT 1;
latestFileRevisionByFileIdWithLicense AS FileRevisionWithLicense:
    SELECT rev.*, license.** FROM file_revisions AS rev
    LEFT JOIN licenses AS license ON license.licenseTxId = rev.licenseTxId
    WHERE rev.driveId = :driveId AND rev.fileId = :fileId
    ORDER BY rev.dateCreated DESC
    LIMIT 1;
latestFileRevisionsByFileIdWithLicenseAndTransactions AS FileRevisionWithLicenseAndTransactions:
    SELECT rev.*, license.**, metadataTx.**, dataTx.**, licenseTx.** FROM file_revisions AS rev
    LEFT JOIN licenses AS license ON license.licenseTxId = rev.licenseTxId
    JOIN network_transactions AS metadataTx ON metadataTx.id = rev.metadataTxId
    JOIN network_transactions AS dataTx ON dataTx.id = rev.dataTxId
    LEFT JOIN network_transactions AS licenseTx ON licenseTx.id = rev.licenseTxId
    WHERE rev.driveId = :driveId AND rev.fileId = :fileId
    ORDER BY rev.dateCreated DESC;

allFileRevisionsWithLicenseReferencedButNotSynced:
    SELECT * FROM file_revisions
    WHERE licenseTxId IS NOT NULL AND licenseTxId NOT IN (
        SELECT licenseTxId FROM licenses
    );

pendingTransactions:
    SELECT * FROM network_transactions
    WHERE status = 'pending';

pendingTransactionsForDrive:
    SELECT * FROM network_transactions
    WHERE status = 'pending' AND id IN (
        SELECT metadataTxId FROM file_revisions
        WHERE driveId = :driveId
    );

getFilesWithAssignedNames:
SELECT * FROM file_entries
WHERE assignedNames IS NOT NULL;


deleteDriveById: DELETE FROM drives WHERE id = :driveId;
deleteAllDriveRevisionsByDriveId:
  DELETE FROM drive_revisions
    WHERE driveId = :driveId;
deleteFoldersByDriveId:
    DELETE FROM folder_entries
    WHERE driveId = :driveId;
deleteFolderRevisionsByDriveId:
    DELETE FROM folder_revisions
    WHERE driveId = :driveId;
deleteFilesForDriveId:
    DELETE FROM file_entries
    WHERE driveId = :driveId;
deleteFileRevisionsByDriveId:
    DELETE FROM file_revisions
    WHERE driveId = :driveId;
deleteLicensesByDriveId:
    DELETE FROM licenses
    WHERE driveId = :driveId;

searchFiles ($query = '', $limit = 50, $offset = 0) AS FileSearchResult:
    SELECT
        f.*,
        parent_folder.name AS parent_folder_name,
        parent_folder.id AS parent_folder_id,
        d.name AS drive_name,
        d.id AS drive_id,
        d.privacy AS drive_privacy
    FROM file_entries f
    JOIN drives d ON d.id = f.driveId
    LEFT JOIN folder_entries parent_folder ON parent_folder.id = f.parentFolderId
    WHERE f.name LIKE '%' || :query || '%'
    ORDER BY f.name
    LIMIT :limit OFFSET :offset;

searchFolders ($query = '', $limit = 50, $offset = 0) AS FolderSearchResult:
    SELECT
        f.*,
        parent_folder.name AS parent_folder_name,
        parent_folder.id AS parent_folder_id,
        d.name AS drive_name,
        d.id AS drive_id,
        d.privacy AS drive_privacy
    FROM folder_entries f
    JOIN drives d ON d.id = f.driveId
    LEFT JOIN folder_entries parent_folder ON parent_folder.id = f.parentFolderId
    WHERE f.name LIKE '%' || :query || '%'
        AND f.parentFolderId IS NOT NULL  -- Exclude root folders
    ORDER BY f.name
    LIMIT :limit OFFSET :offset;

searchDrives ($query = '', $limit = 50, $offset = 0):
    SELECT *
    FROM drives
    WHERE name LIKE '%' || :query || '%'
    ORDER BY name
    LIMIT :limit OFFSET :offset;
